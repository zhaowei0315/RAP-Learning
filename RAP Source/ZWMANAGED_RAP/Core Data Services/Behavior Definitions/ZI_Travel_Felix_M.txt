managed implementation in class zcl_bp_travel_felix_m unique;
strict ( 2 );

define behavior for ZI_Travel_Felix_M //alias <alias_name>
implementation in class zcl_bp_travel_felix_m unique
persistent table /dmo/travel_m
with additional save
lock master
authorization master ( instance )
etag master LastChangedAt
early numbering
{
  create;
  update;
  delete;

  // features : instance 就意味着与实例属性相关联
  action ( features : instance ) acceptTravel result [1] $self; //instance action
  action ( features : instance ) rejectTravel result [1] $self; //instance action
  factory action copyTravel [1];         //factory action

  internal action reCalculateTotalPrice;//internal action

  // field ( readonly : update ) TravelId;// User input primary key value, but it is readonly when update
  field ( readonly ) TravelId, createdBy, createdAt, lastChangedBy, lastChangedAt;
  field ( mandatory ) AgencyId, CustomerId, BeginDate, EndDate, BookingFee, CurrencyCode, OverallStatus;// have to implement validation by coding

  association _Booking { create ( features : instance ); }

  validation validateCustomer on save { create; field CustomerId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field OverallStatus; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validateBookingFee on save { create; field BookingFee; }

  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }
  side effects { field BookingFee affects field TotalPrice; }//to update the UI element Total Price when Booking Fee has changed is added

  mapping for /dmo/travel_m
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }
}

define behavior for ZI_Booking_Felix_M //alias <alias_name>
implementation in class zcl_bp_booking_felix_m unique
persistent table /dmo/booking_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;

  //  field ( readonly : update ) TravelId, BookingId;// User input primary key value, but it is readonly when update
  field ( readonly ) TravelId, BookingId;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;// have to implement validation by coding
  field ( mandatory : create, readonly : update ) BookingDate, CustomerId;// implement the validation automatically

  association _Travel;
  association _BookSuppl { create ( features : instance ); }

  validation validateStatus on save { create; field BookingStatus; }
  validation validateCustomer on save { create; field CustomerId; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validateConnection on save { create; field CarrierId, ConnectionId; }
  validation validateFlightPrice on save { create; field FlightPrice; }

  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }
  side effects { field FlightPrice affects field _Travel.TotalPrice; }//to update the UI element Total Price when the field FlightPrice is changed

  mapping for /dmo/booking_m
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
}

define behavior for ZI_BookSuppl_Felix_M //alias <alias_name>
implementation in class zcl_bp_booksuppl_felix_m unique
//persistent table /dmo/booksuppl_m
with unmanaged save with full data//需要在save_modified方法里手工处理数据更新代码
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  //  field ( readonly : update ) TravelId, BookingId, BookingSupplementId;// User input primary key value, but it is readonly when update
  field ( readonly ) TravelId, BookingId, BookingSupplementId, LastChangedAt;
  field ( mandatory ) SupplementId, Price;// have to implement validation by coding

  association _Travel;
  association _Booking;

  validation validateSupplementID on save { create; field SupplementId; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validatePrice on save { create; field Price; }

  determination calculateTotalPrice on modify { create; field Price, CurrencyCode; }
  side effects { field Price affects field _Travel.TotalPrice; }//to update the UI element Total Price when the field Supplement Price is changed

  mapping for /dmo/booksuppl_m
    {
      TravelId            = travel_id;
      BookingId           = booking_id;
      BookingSupplementId = booking_supplement_id;
      SupplementId        = supplement_id;
      Price               = price;
      CurrencyCode        = currency_code;
      LastChangedAt       = last_changed_at;
    }
}